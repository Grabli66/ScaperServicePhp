<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a4
 */

namespace tink\http\_Method;

use \php\Boot;

final class Method_Impl_ {

	/**
	 * @param string $s
	 * @param \Closure $fallback
	 * 
	 * @return string
	 */
	static public function ofString ($s, $fallback) {
		#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:14: characters 19-34
		$_g = mb_strtoupper($s);
		if ($_g === "DELETE") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:21: characters 22-28
			return "DELETE";
		} else if ($_g === "GET") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:15: characters 19-22
			return "GET";
		} else if ($_g === "HEAD") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:16: characters 20-24
			return "HEAD";
		} else if ($_g === "OPTIONS") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:17: characters 23-30
			return "OPTIONS";
		} else if ($_g === "PATCH") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:20: characters 21-26
			return "PATCH";
		} else if ($_g === "POST") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:18: characters 20-24
			return "POST";
		} else if ($_g === "PUT") {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:19: characters 19-22
			return "PUT";
		} else {
			#/home/grabli66/haxelib/tink_http/git/src/tink/http/Method.hx:22: characters 15-26
			return $fallback($_g);
		}
	}
}

Boot::registerClass(Method_Impl_::class, 'tink.http._Method.Method_Impl_');
