<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a4
 */

namespace tink\_Chunk;

use \tink\chunk\ChunkObject;
use \php\Boot;
use \tink\chunk\ChunkBase;
use \haxe\io\Bytes;

class CompoundChunk extends ChunkBase implements ChunkObject {
	/**
	 * @var ChunkObject
	 */
	public $left;
	/**
	 * @var int
	 */
	public $length;
	/**
	 * @var ChunkObject
	 */
	public $right;
	/**
	 * @var int
	 */
	public $split;

	/**
	 * @param ChunkObject $left
	 * @param ChunkObject $right
	 * 
	 * @return void
	 */
	public function __construct ($left, $right) {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:46: characters 5-21
		$this->left = $left;
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:47: characters 5-23
		$this->right = $right;
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:48: characters 5-29
		$this->split = $left->getLength();
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:49: characters 5-39
		$this->length = $this->split + $right->getLength();
	}

	/**
	 * @param Bytes $target
	 * @param int $offset
	 * 
	 * @return void
	 */
	public function blitTo ($target, $offset) {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:62: characters 5-32
		$this->left->blitTo($target, $offset);
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:63: characters 5-41
		$this->right->blitTo($target, $offset + $this->split);
	}

	/**
	 * @param \Array_hx $into
	 * 
	 * @return void
	 */
	public function flatten ($into) {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:53: characters 5-37
		$this->left->flatten($into);
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:54: characters 5-38
		$this->right->flatten($into);
	}

	/**
	 * @return int
	 */
	public function getLength () {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:39: characters 5-23
		return $this->length;
	}

	/**
	 * @param int $from
	 * @param int $to
	 * 
	 * @return ChunkObject
	 */
	public function slice ($from, $to) {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:58: lines 58-59
		return Chunk_Impl_::concat($this->left->slice($from, $to), $this->right->slice($from - $this->split, $to - $this->split));
	}

	/**
	 * @return Bytes
	 */
	public function toBytes () {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:70: characters 5-40
		$ret = Bytes::alloc($this->length);
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:71: characters 5-19
		$this->blitTo($ret, 0);
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:72: characters 5-15
		return $ret;
	}

	/**
	 * @return string
	 */
	public function toString () {
		#/home/grabli66/haxelib/tink_chunk/git/src/tink/Chunk.hx:67: characters 5-32
		return $this->toBytes()->toString();
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(CompoundChunk::class, 'tink._Chunk.CompoundChunk');
