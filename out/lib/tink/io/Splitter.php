<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a448
 */

namespace tink\io;

use \tink\chunk\ChunkObject;
use \haxe\io\_BytesData\Container;
use \haxe\ds\Option;
use \php\Boot;
use \tink\chunk\ByteChunk;
use \haxe\io\Bytes;
use \tink\_Chunk\Chunk_Impl_;

class Splitter extends BytewiseParser {
	/**
	 * @var ChunkObject
	 */
	public $buf;
	/**
	 * @var ChunkObject
	 */
	public $delim;

	/**
	 * @param ChunkObject $delim
	 * 
	 * @return void
	 */
	public function __construct ($delim) {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:112: characters 13-24
		$this->buf = Chunk_Impl_::$EMPTY;
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:114: characters 5-23
		$this->delim = $delim;
	}

	/**
	 * @param int $char
	 * 
	 * @return ParseStep
	 */
	public function read ($char) {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:118: characters 5-37
		if ($char === -1) {
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:118: characters 20-37
			return ParseStep::Done(Option::None());
		}
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:120: characters 11-14
		$tmp = $this->buf;
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:120: characters 11-42
		$s = mb_chr($char);
		$b = strlen($s);
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:120: characters 5-42
		$this->buf = Chunk_Impl_::catChunk($tmp, ByteChunk::of(new Bytes($b, new Container($s))));
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:121: lines 121-143
		if ($this->buf->getLength() >= $this->delim->getLength()) {
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:122: characters 7-34
			$bcursor = $this->buf->getCursor();
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:123: characters 7-48
			$delta = $this->buf->getLength() - $this->delim->getLength();
			$bcursor->moveTo($bcursor->currentPos + $delta);

			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:124: characters 7-36
			$dcursor = $this->delim->getCursor();
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:126: lines 126-134
			$_g = 0;
			$_g1 = $this->delim->getLength();
			while ($_g < $_g1) {
				++$_g;
				#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:127: lines 127-133
				if ($bcursor->currentByte !== $dcursor->currentByte) {
					#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:128: characters 11-28
					return ParseStep::Progressed();
				} else {
					#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:131: characters 11-25
					$bcursor->next();
					#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:132: characters 11-25
					$dcursor->next();
				}
			}

			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:135: characters 7-77
			$out = ParseStep::Done(Option::Some($this->buf->slice(0, $bcursor->currentPos - $this->delim->getLength())));
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:136: characters 7-24
			$this->buf = Chunk_Impl_::$EMPTY;
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:137: characters 7-17
			return $out;
		} else {
			#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_io/0.7.0/haxelib/src/tink/io/StreamParser.hx:141: characters 7-17
			return ParseStep::Progressed();
		}
	}
}

Boot::registerClass(Splitter::class, 'tink.io.Splitter');
