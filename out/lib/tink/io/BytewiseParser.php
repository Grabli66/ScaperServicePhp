<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a4
 */

namespace tink\io;

use \php\_Boot\HxAnon;
use \php\Boot;
use \tink\core\TypedError;
use \tink\core\Outcome;
use \php\_Boot\HxException;
use \tink\chunk\ChunkCursor;

class BytewiseParser implements StreamParserObject {
	/**
	 * @param ChunkCursor $rest
	 * 
	 * @return Outcome
	 */
	public function eof ($rest) {
		#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:179: characters 19-28
		$_g = $this->read(-1);
		$__hx__switch = ($_g->index);
		if ($__hx__switch === 0) {
			#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:180: characters 24-90
			return Outcome::Failure(new TypedError(422, "Unexpected end of input", new HxAnon([
				"fileName" => "tink/io/StreamParser.hx",
				"lineNumber" => 180,
				"className" => "tink.io.BytewiseParser",
				"methodName" => "eof",
			])));
		} else if ($__hx__switch === 1) {
			#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:181: characters 21-31
			return Outcome::Success($_g->params[0]);
		} else if ($__hx__switch === 2) {
			#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:182: characters 23-33
			return Outcome::Failure($_g->params[0]);
		}
	}

	/**
	 * @param ChunkCursor $cursor
	 * 
	 * @return ParseStep
	 */
	public function progress ($cursor) {
		#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:166: lines 166-173
		while (true) {
			#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:166: characters 15-39
			$_g = $this->read($cursor->currentByte);
			$__hx__switch = ($_g->index);
			if ($__hx__switch === 0) {
			} else if ($__hx__switch === 1) {
				#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:169: characters 9-22
				$cursor->next();
				#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:170: characters 9-23
				return ParseStep::Done($_g->params[0]);
			} else if ($__hx__switch === 2) {
				#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:172: characters 9-25
				return ParseStep::Failed($_g->params[0]);
			}

			#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:166: lines 166-173
			if (!$cursor->next()) {
				break;
			}
		}
		#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:175: characters 5-22
		return ParseStep::Progressed();
	}

	/**
	 * @param int $char
	 * 
	 * @return ParseStep
	 */
	public function read ($char) {
		#/home/grabli66/haxelib/tink_io/git/src/tink/io/StreamParser.hx:161: characters 12-17
		throw new HxException("abstract");
	}
}

Boot::registerClass(BytewiseParser::class, 'tink.io.BytewiseParser');
