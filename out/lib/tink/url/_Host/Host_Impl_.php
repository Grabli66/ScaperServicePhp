<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a4
 */

namespace tink\url\_Host;

use \php\Boot;
use \php\_Boot\HxString;
use \php\_Boot\HxException;

final class Host_Impl_ {

	/**
	 * @param string $name
	 * @param int $port
	 * 
	 * @return string
	 */
	static public function _new ($name, $port = null) {
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:11: character 3
		$this1 = null;
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:13: lines 13-15
		if ($port === null) {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:13: characters 25-29
			$this1 = $name;
		} else if (($port > 65535) || ($port <= 0)) {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:14: characters 43-48
			throw new HxException("Invalid port");
		} else {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:15: characters 13-24
			$this1 = "" . ($name??'null') . ":" . ($port??'null');
		}
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:11: character 3
		return $this1;
	}

	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function get_name ($this1) {
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:19: lines 19-24
		if ($this1 === null) {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:19: characters 25-29
			return null;
		} else {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:20: characters 19-34
			$_g = HxString::split($this1, "]");
			$__hx__switch = ($_g->length);
			if ($__hx__switch === 1) {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:21: characters 21-36
				return (HxString::split(($_g->arr[0] ?? null), ":")->arr[0] ?? null);
			} else if ($__hx__switch === 2) {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:22: characters 24-31
				return (($_g->arr[0] ?? null)??'null') . "]";
			} else {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:23: characters 20-25
				throw new HxException("assert");
			}
		}
	}

	/**
	 * @param string $this
	 * 
	 * @return int
	 */
	static public function get_port ($this1) {
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:28: lines 28-37
		if ($this1 === null) {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:28: characters 25-29
			return null;
		} else {
			#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:30: characters 16-31
			$_g = HxString::split($this1, "]");
			$__hx__switch = ($_g->length);
			if ($__hx__switch === 1) {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:32: characters 22-37
				$_g1 = (HxString::split(($_g->arr[0] ?? null), ":")->arr[1] ?? null);
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:33: lines 33-34
				if ($_g1 === null) {
					#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:33: characters 30-34
					return null;
				} else {
					#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:34: characters 27-42
					return \Std::parseInt($_g1);
				}
			} else if ($__hx__switch === 2) {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:32: characters 22-37
				$_g2 = (HxString::split(($_g->arr[1] ?? null), ":")->arr[1] ?? null);
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:33: lines 33-34
				if ($_g2 === null) {
					#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:33: characters 30-34
					return null;
				} else {
					#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:34: characters 27-42
					return \Std::parseInt($_g2);
				}
			} else {
				#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:36: characters 20-25
				throw new HxException("assert");
			}
		}
	}

	/**
	 * @param string $this
	 * 
	 * @return string
	 */
	static public function toString ($this1) {
		#/home/grabli66/haxelib/tink_url/git/src/tink/url/Host.hx:40: characters 5-16
		return $this1;
	}
}

Boot::registerClass(Host_Impl_::class, 'tink.url._Host.Host_Impl_');
Boot::registerGetters('tink\\url\\_Host\\Host_Impl_', [
	'port' => true,
	'name' => true
]);
