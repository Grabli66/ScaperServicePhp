<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a448
 */

namespace tink\url\_Query;

use \php\Boot;

final class QueryStringBuilder_Impl_ {
	/**
	 * @return \Array_hx
	 */
	static public function _new () {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Query.hx:62: character 3
		return new \Array_hx();
	}

	/**
	 * @param \Array_hx $this
	 * @param string $name
	 * @param string $value
	 * 
	 * @return \Array_hx
	 */
	static public function add ($this1, $name, $value) {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Query.hx:67: characters 5-42
		$this1->arr[$this1->length] = ($name??'null') . "=" . ($value??'null');
		++$this1->length;

		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Query.hx:68: characters 5-21
		return $this1;
	}

	/**
	 * @param \Array_hx $this
	 * 
	 * @return \Array_hx
	 */
	static public function copy ($this1) {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Query.hx:75: characters 5-28
		return (clone $this1);
	}

	/**
	 * @param \Array_hx $this
	 * @param string $sep
	 * 
	 * @return string
	 */
	static public function toString ($this1, $sep = "&") {
		#C:/Users/VEgorov/AppData/Roaming/haxe/haxe_libraries/tink_url/0.4.1/haxelib/src/tink/url/Query.hx:72: characters 5-26
		if ($sep === null) {
			$sep = "&";
		}
		return $this1->join($sep);
	}
}

Boot::registerClass(QueryStringBuilder_Impl_::class, 'tink.url._Query.QueryStringBuilder_Impl_');
