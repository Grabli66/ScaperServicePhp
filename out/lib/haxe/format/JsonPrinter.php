<?php
/**
 * Generated by Haxe 4.0.0-rc.3+e3df7a448
 */

namespace haxe\format;

use \php\_Boot\HxAnon;
use \php\Boot;
use \php\_Boot\HxClosure;
use \haxe\ds\StringMap;
use \php\_NativeIndexedArray\NativeIndexedArrayIterator;

/**
 * An implementation of JSON printer in Haxe.
 * This class is used by `haxe.Json` when native JSON implementation
 * is not available.
 * @see https://haxe.org/manual/std-Json-encoding.html
 */
class JsonPrinter {
	/**
	 * @var \StringBuf
	 */
	public $buf;
	/**
	 * @var string
	 */
	public $indent;
	/**
	 * @var int
	 */
	public $nind;
	/**
	 * @var bool
	 */
	public $pretty;
	/**
	 * @var \Closure
	 */
	public $replacer;

	/**
	 * Encodes `o`'s value and returns the resulting JSON string.
	 * If `replacer` is given and is not null, it is used to retrieve
	 * actual object to be encoded. The `replacer` function takes two parameters,
	 * the key and the value being encoded. Initial key value is an empty string.
	 * If `space` is given and is not null, the result will be pretty-printed.
	 * Successive levels will be indented by this string.
	 * 
	 * @param mixed $o
	 * @param \Closure $replacer
	 * @param string $space
	 * 
	 * @return string
	 */
	static public function print ($o, $replacer = null, $space = null) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:45: characters 3-50
		$printer = new JsonPrinter($replacer, $space);
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:46: characters 3-23
		$printer->write("", $o);
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:47: characters 3-32
		return $printer->buf->b;
	}

	/**
	 * @param \Closure $replacer
	 * @param string $space
	 * 
	 * @return void
	 */
	public function __construct ($replacer, $space) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:57: characters 3-27
		$this->replacer = $replacer;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:58: characters 3-22
		$this->indent = $space;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:59: characters 3-30
		$this->pretty = $space !== null;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:60: characters 3-16
		$this->nind = 0;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:67: characters 3-24
		$this->buf = new \StringBuf();
	}

	/**
	 * @param mixed $v
	 * 
	 * @return void
	 */
	public function classString ($v) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:154: characters 3-59
		$this->fieldsString($v, \Type::getInstanceFields(\Type::getClass($v)));
	}

	/**
	 * @param mixed $v
	 * @param \Array_hx $fields
	 * 
	 * @return void
	 */
	public function fieldsString ($v, $fields) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:162: characters 3-20
		$_this = $this->buf;
		$_this->b = ($_this->b??'null') . (mb_chr(123)??'null');

		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:163: characters 3-27
		$len = $fields->length;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:164: characters 3-22
		$last = $len - 1;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:165: characters 3-20
		$first = true;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:166: lines 166-183
		$_g = 0;
		while ($_g < $len) {
			$i = $_g++;
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:167: characters 4-22
			$f = ($fields->arr[$i] ?? null);
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:168: characters 4-35
			$value = \Reflect::field($v, $f);
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:169: characters 4-44
			if (($value instanceof \Closure) || ($value instanceof HxClosure)) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:169: characters 36-44
				continue;
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:170: characters 4-65
			if ($first) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:170: characters 18-24
				$this->nind++;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:170: characters 26-39
				$first = false;
			} else {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:170: characters 48-65
				$_this1 = $this->buf;
				$_this1->b = ($_this1->b??'null') . (mb_chr(44)??'null');
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:171: characters 4-10
			if ($this->pretty) {
				$_this2 = $this->buf;
				$_this2->b = ($_this2->b??'null') . (mb_chr(10)??'null');
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:172: characters 4-10
			if ($this->pretty) {
				$v1 = \StringTools::lpad("", $this->indent, $this->nind * mb_strlen($this->indent));
				$this->buf->add($v1);
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:173: characters 4-12
			$this->quote($f);
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:174: characters 4-21
			$_this3 = $this->buf;
			$_this3->b = ($_this3->b??'null') . (mb_chr(58)??'null');

			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:175: characters 4-33
			if ($this->pretty) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:175: characters 16-33
				$_this4 = $this->buf;
				$_this4->b = ($_this4->b??'null') . (mb_chr(32)??'null');
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:176: characters 4-19
			$this->write($f, $value);
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:177: lines 177-182
			if ($i === $last) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:179: characters 5-11
				$this->nind--;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:180: characters 5-11
				if ($this->pretty) {
					$_this5 = $this->buf;
					$_this5->b = ($_this5->b??'null') . (mb_chr(10)??'null');
				}
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:181: characters 5-11
				if ($this->pretty) {
					$v2 = \StringTools::lpad("", $this->indent, $this->nind * mb_strlen($this->indent));
					$this->buf->add($v2);
				}
			}
		}

		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:184: characters 3-20
		$_this6 = $this->buf;
		$_this6->b = ($_this6->b??'null') . (mb_chr(125)??'null');

	}

	/**
	 * @param string $s
	 * 
	 * @return void
	 */
	public function quote ($s) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:194: characters 3-20
		$_this = $this->buf;
		$_this->b = ($_this->b??'null') . (mb_chr(34)??'null');

		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:195: characters 3-13
		$i = 0;
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:199: lines 199-232
		while (true) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:200: characters 4-43
			$c = \StringTools::fastCodeAt($s, $i++);
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:201: characters 4-36
			if ($c === 0) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:201: characters 31-36
				break;
			}
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:202: lines 202-231
			if ($c === 8) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:208: characters 12-22
				$this->buf->add("\\b");
			} else if ($c === 9) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:207: characters 20-30
				$this->buf->add("\\t");
			} else if ($c === 10) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:205: characters 20-30
				$this->buf->add("\\n");
			} else if ($c === 12) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:209: characters 13-23
				$this->buf->add("\\f");
			} else if ($c === 13) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:206: characters 20-30
				$this->buf->add("\\r");
			} else if ($c === 34) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:203: characters 19-29
				$this->buf->add("\\\"");
			} else if ($c === 92) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:204: characters 20-31
				$this->buf->add("\\\\");
			} else {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:229: characters 5-15
				$_this1 = $this->buf;
				$_this1->b = ($_this1->b??'null') . (mb_chr($c)??'null');
			}
		}
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:236: characters 3-20
		$_this2 = $this->buf;
		$_this2->b = ($_this2->b??'null') . (mb_chr(34)??'null');

	}

	/**
	 * @param mixed $k
	 * @param mixed $v
	 * 
	 * @return void
	 */
	public function write ($k, $v) {
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:80: characters 3-43
		if ($this->replacer !== null) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:80: characters 25-43
			$v = ($this->replacer)($k, $v);
		}
		#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:81: characters 11-25
		$_g = \Type::typeof($v);
		$__hx__switch = ($_g->index);
		if ($__hx__switch === 0) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:132: characters 4-15
			$this->buf->add("null");
		} else if ($__hx__switch === 1) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:87: characters 4-52
			$this->buf->add($v);
		} else if ($__hx__switch === 2) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:89: characters 4-50
			$v1 = (is_finite($v) ? \Std::string($v) : "null");
			$this->buf->add($v1);
		} else if ($__hx__switch === 3) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:130: characters 4-68
			$this->buf->add(($v ? "true" : "false"));
		} else if ($__hx__switch === 4) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:85: characters 4-16
			$this->fieldsString($v, \Reflect::fields($v));
		} else if ($__hx__switch === 5) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:91: characters 4-18
			$this->buf->add("\"<fun>\"");
		} else if ($__hx__switch === 6) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:92: characters 15-16
			$_g2 = $_g->params[0];
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:93: lines 93-125
			if ($_g2 === Boot::getClass('String')) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:94: characters 5-13
				$this->quote($v);
			} else if ($_g2 === Boot::getClass(\Array_hx::class)) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:96: characters 5-32
				$v2 = $v;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:97: characters 5-22
				$_this = $this->buf;
				$_this->b = ($_this->b??'null') . (mb_chr(91)??'null');

				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:99: characters 5-24
				$len = $v2->length;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:100: characters 5-24
				$last = $len - 1;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:101: lines 101-113
				$_g1 = 0;
				while ($_g1 < $len) {
					$i = $_g1++;
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:103: characters 6-46
					if ($i > 0) {
						#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:103: characters 17-34
						$_this1 = $this->buf;
						$_this1->b = ($_this1->b??'null') . (mb_chr(44)??'null');
					} else {
						#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:103: characters 40-46
						$this->nind++;
					}
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:104: characters 6-12
					if ($this->pretty) {
						$_this2 = $this->buf;
						$_this2->b = ($_this2->b??'null') . (mb_chr(10)??'null');
					}
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:105: characters 6-12
					if ($this->pretty) {
						$v3 = \StringTools::lpad("", $this->indent, $this->nind * mb_strlen($this->indent));
						$this->buf->add($v3);
					}
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:106: characters 6-20
					$this->write($i, ($v2->arr[$i] ?? null));
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:107: lines 107-112
					if ($i === $last) {
						#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:109: characters 7-13
						$this->nind--;
						#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:110: characters 7-13
						if ($this->pretty) {
							$_this3 = $this->buf;
							$_this3->b = ($_this3->b??'null') . (mb_chr(10)??'null');
						}
						#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:111: characters 7-13
						if ($this->pretty) {
							$v4 = \StringTools::lpad("", $this->indent, $this->nind * mb_strlen($this->indent));
							$this->buf->add($v4);
						}
					}
				}

				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:114: characters 5-22
				$_this4 = $this->buf;
				$_this4->b = ($_this4->b??'null') . (mb_chr(93)??'null');

			} else if ($_g2 === Boot::getClass(StringMap::class)) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:116: characters 5-44
				$v5 = $v;
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:117: characters 5-16
				$o = new HxAnon();
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:118: characters 15-23
				$k1 = new NativeIndexedArrayIterator(array_values(array_map("strval", array_keys($v5->data))));
				while ($k1->hasNext()) {
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:118: lines 118-119
					$k2 = $k1->next();
					#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:119: characters 6-36
					\Reflect::setField($o, $k2, ($v5->data[$k2] ?? null));
				}

				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:120: characters 5-17
				$v6 = $o;
				$this->fieldsString($v6, \Reflect::fields($v6));

			} else if ($_g2 === Boot::getClass(\Date::class)) {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:123: characters 5-24
				$this->quote($v->toString());
			} else {
				#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:125: characters 5-19
				$this->classString($v);
			}
		} else if ($__hx__switch === 7) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:128: characters 4-10
			$this->buf->add(Boot::dynamicField($v, 'index'));
		} else if ($__hx__switch === 8) {
			#C:\Users\VEgorov\AppData\Roaming/haxe/versions/4.0.0-rc.3/std/haxe/format/JsonPrinter.hx:83: characters 4-16
			$this->buf->add("\"???\"");
		}

	}
}

Boot::registerClass(JsonPrinter::class, 'haxe.format.JsonPrinter');
